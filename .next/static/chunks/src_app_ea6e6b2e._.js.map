{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/St4rk/Desktop/learningAndDevelopment/demo/src/app/utils/hooks/useSocket.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Socket } from \"socket.io-client\";\r\n\r\n/**\r\n * Due to the socket object depending on events triggering from the socket.on()\r\n * event emitter, this is not a native react implementation and therefore does\r\n * not force the react component to re-render\r\n *\r\n * By leveraging stateful hooks we can control when a react component will\r\n * trigger a re-render\r\n *\r\n * Note: The states maintained by this hook could have also just been\r\n * states living inside the values of SocketContext.Provider but this demo\r\n * was intended to represent a few ways to tackle all this abstractly using both\r\n * hooks and context providers\r\n */\r\nconst useSocket = (socket: Socket | any) => {\r\n  const [socketId, setSocketId] = useState<string | null>(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"connect\", () => {\r\n        setSocketId(socket.id);\r\n        setIsConnected(true);\r\n      });\r\n\r\n      socket.on(\"error\", (error:any) => {\r\n        setError(error);\r\n        console.error(\"Something went wrong and the socket errored!\", error);\r\n      });\r\n\r\n      // any additional common socket.on() events can be placed here with\r\n      // a controlled exposed state using setState; I would not put custom\r\n      // events inside this hook as it's purpose is mostly for connection state\r\n      // react lifecycle sync and error handling\r\n    } else {\r\n      setSocketId(null);\r\n      setIsConnected(false);\r\n      setError(null);\r\n    }\r\n  }, [socket]);\r\n\r\n  return {\r\n    socketId,\r\n    isConnected,\r\n    error\r\n  };\r\n};\r\n\r\nexport default useSocket;\r\n"],"names":[],"mappings":";;;AAAA;;;AAGA;;;;;;;;;;;;CAYC,GACD,MAAM,YAAY,CAAC;;IACjB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACxD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,IAAI,QAAQ;gBACV,OAAO,EAAE,CAAC;2CAAW;wBACnB,YAAY,OAAO,EAAE;wBACrB,eAAe;oBACjB;;gBAEA,OAAO,EAAE,CAAC;2CAAS,CAAC;wBAClB,SAAS;wBACT,QAAQ,KAAK,CAAC,gDAAgD;oBAChE;;YAEA,mEAAmE;YACnE,oEAAoE;YACpE,yEAAyE;YACzE,0CAA0C;YAC5C,OAAO;gBACL,YAAY;gBACZ,eAAe;gBACf,SAAS;YACX;QACF;8BAAG;QAAC;KAAO;IAEX,OAAO;QACL;QACA;QACA;IACF;AACF;GAjCM;uCAmCS","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/St4rk/Desktop/learningAndDevelopment/demo/src/app/containers/SocketProvider.tsx"],"sourcesContent":["\"use client\"\r\nimport React, { createContext, useEffect, useState } from \"react\";\r\nimport io, { Socket } from \"socket.io-client\";\r\nimport useSocket from \"../utils/hooks/useSocket\";\r\n\r\n\r\n\r\nexport interface SocketContextValues {\r\n    socket: Socket | null;\r\n}\r\nexport const SocketContext = createContext<SocketContextValues>({\r\n    socket: null\r\n});\r\n\r\ninterface SocketProviderProps {\r\n    autoConnect?: boolean;\r\n    children: React.ReactNode;\r\n}\r\nconst SocketProvider: React.FC<SocketProviderProps> = ({\r\n    autoConnect = false,\r\n    children\r\n}) => {\r\n    const [socket, setSocket] = useState<Socket | null>(null);\r\n    const { socketId, isConnected } = useSocket(socket);\r\n\r\n    // initialize connection with api\r\n    useEffect(() => {\r\n        console.log('init ')\r\n        const socket = io(process.env.BASE_URL as string, {\r\n            path: \"/api/socket\",\r\n            autoConnect\r\n        });\r\n        console.log(socket, 'socket')\r\n        // set socket to local state to be passed into SocketContext.Provider\r\n        setSocket(socket);\r\n\r\n        // disconnect socket on component unmount\r\n        return () => {\r\n            console.log('socket disconnect.')\r\n            socket.disconnect();\r\n        };\r\n    }, [autoConnect]);\r\n\r\n    return (\r\n        <SocketContext.Provider value={{ socket }}>\r\n            {socket && (\r\n                <>\r\n                    {!isConnected && (\r\n                        <div style={{ marginBottom: \"24px\" }}>\r\n                            <h3>socket.io enabled but not connected</h3>\r\n                            <button type=\"button\" onClick={() => socket.connect()}>\r\n                                Connect\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n\r\n                    {isConnected && (\r\n                        <h3>Connected to socket.io with unique ID ${socketId}</h3>\r\n                    )}\r\n\r\n                    {children}\r\n                </>\r\n            )}\r\n        </SocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport default SocketProvider;\r\n"],"names":[],"mappings":";;;;AA4B0B;;AA3B1B;AACA;AAAA;AACA;;;AAHA;;;;AAUO,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAuB;IAC5D,QAAQ;AACZ;AAMA,MAAM,iBAAgD,CAAC,EACnD,cAAc,KAAK,EACnB,QAAQ,EACX;;IACG,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACpD,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,4IAAA,CAAA,UAAS,AAAD,EAAE;IAE5C,iCAAiC;IACjC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACN,QAAQ,GAAG,CAAC;YACZ,MAAM,SAAS,CAAA,GAAA,kLAAA,CAAA,UAAE,AAAD,EAAE,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,QAAQ,EAAY;gBAC9C,MAAM;gBACN;YACJ;YACA,QAAQ,GAAG,CAAC,QAAQ;YACpB,qEAAqE;YACrE,UAAU;YAEV,yCAAyC;YACzC;4CAAO;oBACH,QAAQ,GAAG,CAAC;oBACZ,OAAO,UAAU;gBACrB;;QACJ;mCAAG;QAAC;KAAY;IAEhB,qBACI,6LAAC,cAAc,QAAQ;QAAC,OAAO;YAAE;QAAO;kBACnC,wBACG;;gBACK,CAAC,6BACE,6LAAC;oBAAI,OAAO;wBAAE,cAAc;oBAAO;;sCAC/B,6LAAC;sCAAG;;;;;;sCACJ,6LAAC;4BAAO,MAAK;4BAAS,SAAS,IAAM,OAAO,OAAO;sCAAI;;;;;;;;;;;;gBAM9D,6BACG,6LAAC;;wBAAG;wBAAwC;;;;;;;gBAG/C;;;;;;;;AAKrB;GA/CM;;QAKgC,4IAAA,CAAA,UAAS;;;KALzC;uCAiDS","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/St4rk/Desktop/learningAndDevelopment/demo/src/app/components/StatUpdateBtn.tsx"],"sourcesContent":["\"use client\"\r\nimport { useContext } from \"react\";\r\nimport { UpdateIndicator } from \"../../pages/api/socket\";\r\nimport { SocketContext } from \"../containers/SocketProvider\";\r\nimport useSocket from \"../utils/hooks/useSocket\";\r\n\r\n\r\n\r\ninterface StatUpdateBtnProps {\r\n  text: string;\r\n  update: UpdateIndicator;\r\n}\r\nconst StatUpdateBtn: React.FC<StatUpdateBtnProps> = ({ text, update }) => {\r\n  const { socket } = useContext(SocketContext);\r\n  const { isConnected } = useSocket(socket);\r\n\r\n  return isConnected && socket ? (\r\n    <button type=\"button\" onClick={() => socket.emit(\"update\", update)}>\r\n      {text}\r\n    </button>\r\n  ) : null;\r\n};\r\n\r\nexport default StatUpdateBtn;\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;;;AAJA;;;;AAYA,MAAM,gBAA8C,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE;;IACnE,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,8IAAA,CAAA,gBAAa;IAC3C,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,4IAAA,CAAA,UAAS,AAAD,EAAE;IAElC,OAAO,eAAe,uBACpB,6LAAC;QAAO,MAAK;QAAS,SAAS,IAAM,OAAO,IAAI,CAAC,UAAU;kBACxD;;;;;eAED;AACN;GATM;;QAEoB,4IAAA,CAAA,UAAS;;;KAF7B;uCAWS","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/St4rk/Desktop/learningAndDevelopment/demo/src/app/components/StatsTracker.tsx"],"sourcesContent":["\"use client\"\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { SocketContext } from \"../containers/SocketProvider\";\r\nimport useSocket from \"../utils/hooks/useSocket\";\r\nimport { ServerStats } from \"../../pages/api/socket\";\r\n\r\n\r\n\r\nconst StatsTracker = () => {\r\n  const { socket } = useContext(SocketContext);\r\n  const { isConnected } = useSocket(socket);\r\n  const [stats, setStats] = useState<ServerStats | null>(null);\r\n  const [recentlyUpdatedBy, setRecentlyUpdatedBy] = useState(\"\");\r\n\r\n  // update stats on event update-stats and the 'recently updated by' info\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"update-stats\", (updatedStats: Record<string, number>) => {\r\n        setStats(updatedStats);\r\n      });\r\n\r\n      socket.on(\"stats-recently-updated-by\", (updatedBy: string) => {\r\n        setRecentlyUpdatedBy(updatedBy);\r\n\r\n        // clear recently updated by\r\n        setTimeout(() => {\r\n          setRecentlyUpdatedBy(\"\");\r\n        }, 2000);\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  // request initial stats when stats are initially `null` and socket is established\r\n  useEffect(() => {\r\n    if (!stats && socket) {\r\n      socket.emit(\"get-stats\");\r\n    }\r\n  }, [stats, socket]);\r\n\r\n  return (\r\n    <>\r\n      {!isConnected && <h4>Stat tracker is disconnected</h4>}\r\n      {isConnected && <pre>{JSON.stringify(stats, null, 2)}</pre>}\r\n      {recentlyUpdatedBy && (\r\n        <h2>Stats were recently updated by ${recentlyUpdatedBy}</h2>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatsTracker;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;AAHA;;;;AAQA,MAAM,eAAe;;IACnB,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,8IAAA,CAAA,gBAAa;IAC3C,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,4IAAA,CAAA,UAAS,AAAD,EAAE;IAClC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IACvD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3D,wEAAwE;IACxE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,QAAQ;gBACV,OAAO,EAAE,CAAC;8CAAgB,CAAC;wBACzB,SAAS;oBACX;;gBAEA,OAAO,EAAE,CAAC;8CAA6B,CAAC;wBACtC,qBAAqB;wBAErB,4BAA4B;wBAC5B;sDAAW;gCACT,qBAAqB;4BACvB;qDAAG;oBACL;;YACF;QACF;iCAAG;QAAC;KAAO;IAEX,kFAAkF;IAClF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,IAAI,CAAC,SAAS,QAAQ;gBACpB,OAAO,IAAI,CAAC;YACd;QACF;iCAAG;QAAC;QAAO;KAAO;IAElB,qBACE;;YACG,CAAC,6BAAe,6LAAC;0BAAG;;;;;;YACpB,6BAAe,6LAAC;0BAAK,KAAK,SAAS,CAAC,OAAO,MAAM;;;;;;YACjD,mCACC,6LAAC;;oBAAG;oBAAiC;;;;;;;;;AAI7C;GAxCM;;QAEoB,4IAAA,CAAA,UAAS;;;KAF7B;uCA0CS","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/St4rk/Desktop/learningAndDevelopment/demo/src/app/page.tsx"],"sourcesContent":["\"use client\"\nimport { useState } from \"react\";\nimport SocketProvider from \"./containers/SocketProvider\";\nimport StatUpdateBtn from \"./components/StatUpdateBtn\";\nimport StatsTracker from \"./components/StatsTracker\";\n\n\n\nconst Home: React.FC = () => {\n  const [enableSocket, setEnableSocket] = useState(false);\n  const [isAutoConnect, setIsAutoConnect] = useState(false);\n\n  return (\n    <div style={{ margin: \"24px\" }}>\n      <h2>socket.io Example with SocketProvider for granular socket control</h2>\n\n      <div\n        style={{\n          display: \"flex\",\n          gap: \"24px\",\n          border: \"1px solid black\",\n          padding: \"24px\"\n        }}\n      >\n        <button type=\"button\" onClick={() => setEnableSocket(!enableSocket)}>\n          {enableSocket ? \"Disable socket.io\" : \"Enable socket.io\"}\n        </button>\n\n        <span>\n          <input\n            id=\"autoConnect\"\n            type=\"checkbox\"\n            checked={isAutoConnect}\n            onChange={() => setIsAutoConnect(!isAutoConnect)}\n          />\n          <label htmlFor=\"autoConnect\">Enable auto connect</label>\n        </span>\n      </div>\n\n      <div\n        style={{\n          border: \"1px solid black\",\n          padding: \"24px\",\n          marginTop: \"24px\"\n        }}\n      >\n        {!enableSocket && <h3>Disabled</h3>}\n\n        {enableSocket && (\n          <SocketProvider autoConnect={isAutoConnect}>\n            <div>\n              <div style={{ display: \"flex\", gap: \"12px\" }}>\n                <StatUpdateBtn text=\"Increment\" update=\"increment\" />\n                <StatUpdateBtn text=\"Decrement\" update=\"decrement\" />\n              </div>\n\n              <div\n                style={{\n                  border: \"1px solid black\",\n                  marginTop: \"24px\",\n                  padding: \"12px\"\n                }}\n              >\n                <StatsTracker />\n              </div>\n            </div>\n          </SocketProvider>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;;;AAJA;;;;;AAQA,MAAM,OAAiB;;IACrB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,qBACE,6LAAC;QAAI,OAAO;YAAE,QAAQ;QAAO;;0BAC3B,6LAAC;0BAAG;;;;;;0BAEJ,6LAAC;gBACC,OAAO;oBACL,SAAS;oBACT,KAAK;oBACL,QAAQ;oBACR,SAAS;gBACX;;kCAEA,6LAAC;wBAAO,MAAK;wBAAS,SAAS,IAAM,gBAAgB,CAAC;kCACnD,eAAe,sBAAsB;;;;;;kCAGxC,6LAAC;;0CACC,6LAAC;gCACC,IAAG;gCACH,MAAK;gCACL,SAAS;gCACT,UAAU,IAAM,iBAAiB,CAAC;;;;;;0CAEpC,6LAAC;gCAAM,SAAQ;0CAAc;;;;;;;;;;;;;;;;;;0BAIjC,6LAAC;gBACC,OAAO;oBACL,QAAQ;oBACR,SAAS;oBACT,WAAW;gBACb;;oBAEC,CAAC,8BAAgB,6LAAC;kCAAG;;;;;;oBAErB,8BACC,6LAAC,8IAAA,CAAA,UAAc;wBAAC,aAAa;kCAC3B,cAAA,6LAAC;;8CACC,6LAAC;oCAAI,OAAO;wCAAE,SAAS;wCAAQ,KAAK;oCAAO;;sDACzC,6LAAC,6IAAA,CAAA,UAAa;4CAAC,MAAK;4CAAY,QAAO;;;;;;sDACvC,6LAAC,6IAAA,CAAA,UAAa;4CAAC,MAAK;4CAAY,QAAO;;;;;;;;;;;;8CAGzC,6LAAC;oCACC,OAAO;wCACL,QAAQ;wCACR,WAAW;wCACX,SAAS;oCACX;8CAEA,cAAA,6LAAC,4IAAA,CAAA,UAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ7B;GA/DM;KAAA;uCAiES","debugId":null}}]
}