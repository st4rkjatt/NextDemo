{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/St4rk/Desktop/learningAndDevelopment/demo/src/app/helpers/getDataToken.ts"],"sourcesContent":["import { NextRequest } from \"next/server\";\r\nimport jwt from \"jsonwebtoken\";\r\nexport async function getDataToken(request: NextRequest) {\r\n    try {\r\n        const token = request.cookies.get('token')?.value || '';\r\n\r\n        if (!token) {\r\n            throw new Error(\"No token found\");\r\n        }\r\n\r\n        const decodedToken = await jwt.verify(token, 'st4rk');\r\n\r\n  \r\n        if (!decodedToken) {\r\n            throw new Error(\"Invalid token\");\r\n        }\r\n        return decodedToken?.id\r\n    } catch (error: any) {\r\n        console.error(\"Error getting data token:\", error);\r\n        throw new Error(error.message);\r\n\r\n    }\r\n}"],"names":[],"mappings":";;;AACA;;AACO,eAAe,aAAa,OAAoB;IACnD,IAAI;QACA,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU,SAAS;QAErD,IAAI,CAAC,OAAO;YACR,MAAM,IAAI,MAAM;QACpB;QAEA,MAAM,eAAe,MAAM,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;QAG7C,IAAI,CAAC,cAAc;YACf,MAAM,IAAI,MAAM;QACpB;QACA,OAAO,cAAc;IACzB,EAAE,OAAO,OAAY;QACjB,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,MAAM,IAAI,MAAM,MAAM,OAAO;IAEjC;AACJ","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/St4rk/Desktop/learningAndDevelopment/demo/src/app/dbConfig/dbConfig.ts"],"sourcesContent":["import mongoose from 'mongoose';\r\n\r\nexport async function connect() {\r\n    try{\r\n       await mongoose.connect(\"mongodb://localhost:27017/demo\");\r\n\r\n        const connection = mongoose.connection;\r\n\r\n        connection.on('connected', () => {\r\n            console.log(\"MongoDB connected successfully\")\r\n        })\r\n\r\n        connection.on('error', (err) => {\r\n            console.log('MongoDB connection error' + err);\r\n            process.exit();\r\n       })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe;IAClB,IAAG;QACA,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QAEtB,MAAM,aAAa,yGAAA,CAAA,UAAQ,CAAC,UAAU;QAEtC,WAAW,EAAE,CAAC,aAAa;YACvB,QAAQ,GAAG,CAAC;QAChB;QAEA,WAAW,EAAE,CAAC,SAAS,CAAC;YACpB,QAAQ,GAAG,CAAC,6BAA6B;YACzC,QAAQ,IAAI;QACjB;IACH,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC;IAChB;AACJ","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/St4rk/Desktop/learningAndDevelopment/demo/src/app/models/conversationModel.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst conversationSchema = new mongoose.Schema({\r\n    participants: [{ type: mongoose.Schema.Types.ObjectId, ref: 'user' }],\r\n    messages: [{ type: mongoose.Schema.Types.ObjectId, ref: 'message' }]\r\n}, { timestamps: true });\r\n\r\nconst ConversationModel = mongoose.models.Conversation || mongoose.model(\"Conversation\", conversationSchema); // âœ… fix here\r\nexport default ConversationModel;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,qBAAqB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IAC3C,cAAc;QAAC;YAAE,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YAAE,KAAK;QAAO;KAAE;IACrE,UAAU;QAAC;YAAE,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YAAE,KAAK;QAAU;KAAE;AACxE,GAAG;IAAE,YAAY;AAAK;AAEtB,MAAM,oBAAoB,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,YAAY,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,gBAAgB,qBAAqB,aAAa;uCAC5G","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/St4rk/Desktop/learningAndDevelopment/demo/src/app/api/getconversation/%5Bid%5D/route.ts"],"sourcesContent":["import { getDataToken } from \"@/app/helpers/getDataToken\";\r\nimport User from \"@/app/models/userModel\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { connect } from \"@/app/dbConfig/dbConfig\";\r\nimport ConversationModel from \"@/app/models/conversationModel\";\r\n\r\nconnect();\r\nexport async function GET(request: NextRequest, { params }: { params: { id: string } }) {\r\n    try {\r\n\r\n        const senderId = await getDataToken(request);\r\n\r\n        if (!senderId) {\r\n            return NextResponse.json({ message: \"Unauthorized\", status: false }, { status: 401 });\r\n        }\r\n        const { id } = await params;\r\n        const receiverId = id\r\n\r\n        const conversation = await ConversationModel.findOne({\r\n            participants: { $all: [senderId, receiverId] }\r\n        }).populate({ path: 'messages' })\r\n     \r\n        if (!conversation) {\r\n            return NextResponse.json({ message: \"Conversation not found\", status: true, result: [] }, { status: 200 });\r\n\r\n        }\r\n        // console.log(conversation, 'coversation')\r\n\r\n        return NextResponse.json({ message: \"Conversation  found\", status: true, result: conversation.messages }, { status: 200 });\r\n\r\n\r\n    } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n        return NextResponse.json({ message: \"Internal Server Error\", status: false }, { status: 500 });\r\n    }\r\n}"],"names":[],"mappings":";;;AAAA;AAEA;AACA;AACA;;;;;AAEA,CAAA,GAAA,oIAAA,CAAA,UAAO,AAAD;AACC,eAAe,IAAI,OAAoB,EAAE,EAAE,MAAM,EAA8B;IAClF,IAAI;QAEA,MAAM,WAAW,MAAM,CAAA,GAAA,uIAAA,CAAA,eAAY,AAAD,EAAE;QAEpC,IAAI,CAAC,UAAU;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAgB,QAAQ;YAAM,GAAG;gBAAE,QAAQ;YAAI;QACvF;QACA,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;QACrB,MAAM,aAAa;QAEnB,MAAM,eAAe,MAAM,2IAAA,CAAA,UAAiB,CAAC,OAAO,CAAC;YACjD,cAAc;gBAAE,MAAM;oBAAC;oBAAU;iBAAW;YAAC;QACjD,GAAG,QAAQ,CAAC;YAAE,MAAM;QAAW;QAE/B,IAAI,CAAC,cAAc;YACf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAA0B,QAAQ;gBAAM,QAAQ,EAAE;YAAC,GAAG;gBAAE,QAAQ;YAAI;QAE5G;QACA,2CAA2C;QAE3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAuB,QAAQ;YAAM,QAAQ,aAAa,QAAQ;QAAC,GAAG;YAAE,QAAQ;QAAI;IAG5H,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAyB,QAAQ;QAAM,GAAG;YAAE,QAAQ;QAAI;IAChG;AACJ","debugId":null}}]
}